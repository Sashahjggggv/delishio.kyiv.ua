let _functions = {}, winW, winH, winScr, isTouchScreen, is_Mac, isIE, isAndroid, isIPhone;

jQuery(function($) {

    "use strict";

    /* function on page ready */
    isTouchScreen = navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/webOS/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/iPod/i);
    is_Mac = navigator.platform.toUpperCase().indexOf('MAC') >= 0;
    isIE = /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /MSIE 10/i.test(navigator.userAgent);
    isAndroid = navigator.userAgent.match(/Android/i);
    isIPhone =  navigator.userAgent.match(/iPhone/i);

    const $body = $('body');

    $body.addClass('loaded');

    if (isTouchScreen) $('html').addClass('touch-screen');
    if (is_Mac) $body.addClass('mac');
    if (isIE) $body.addClass('ie');
    if(isAndroid){$('html').addClass('android');}
    if(isIPhone){$('html').addClass('ios');}

    _functions.productSwiperWrapperHeight = function() {
        if (!$('.products_swiper').length) return;

        setTimeout(function() {
            const h = $('.products_swiper').find('.swiper-container').height();
            $('.products_swiper').find('.swiper-wrapper').css({'height' : h});
        }, 100);
    }

    _functions.pageCalculations = function () {
        winW = $(window).width();
        winH = $(window).height();

        //_functions.productSwiperWrapperHeight();
    }

    _functions.pageCalculations();



    //images preload
    _functions.imagesLazyLoad = function () {
        /* images load */
        $('img[data-i-src]:not(.imgLoaded)').each(function (i, el) {
            let loadImage = new Image();
            loadImage.src = $(el).data('i-src');

            loadImage.onload = function () {
                $(el).attr({'src': $(el).data('i-src')}).addClass('imgLoaded');
            };
            loadImage = null;
        });

        $('iframe[data-i-src]:not(.imgLoaded)').each(function (i, el) {
            $(el).attr({'src': $(el).data('i-src')}).addClass('imgLoaded');
        });

        $('[data-bg]:not(.bgLoaded)').each(function (i, el) {
            let loadImage = new Image();
            loadImage.src = $(el).data('bg');

            loadImage.onload = function () {
                $(el)
                    .css({'background-image': 'url(' + $(el).data('bg') + ')'})
                    .addClass('bgLoaded');
            }
            loadImage = null;
        });
    }

    //images preload
    setTimeout(function () {
        _functions.imagesLazyLoad();
    }, 100);

    _functions.pageScroll = function(current, header_height){
        $('html, body').animate({scrollTop: current.offset().top - header_height}, 700);
    }

    //sumoselect
    if ($('.SelectBox').length) {
        $('.SelectBox').each(function () {
            $(this).SumoSelect({
                floatWidth: 0,
                nativeOnDevice: []
            });
        });

/*        $('.SelectBox').on('sumo:opened', function(sumo) {
            if ( winW < 768 ) _functions.pageScroll($(this), $('.header').outerHeight() + 30);
        });*/
    }

    /* function on page scroll */
    $(window).scroll(function () {
        _functions.scrollCall();
    });

    // scroll header
    var prev_scroll = 0;
    _functions.scrollCall = function() {
        winScr = $(window).scrollTop();
        if(winScr > 10) {
          $('header').addClass('scrolled');
        } else {
          $('header').removeClass('scrolled');
        }
        if(winScr > 10) {
            $('main').addClass('scrolled-page');
          } else {
            $('main').removeClass('scrolled-page');
          }
        if ( $('.create-footer').length) {
            if (winScr + winH >= $('.create-main-footer').offset().top) {
                $('.create-footer').addClass('bottom');
            } else {
                $('.create-footer').removeClass('bottom');
            }
        }
    }
    _functions.scrollCall();

    // sorry close
    $(".sorry-btn").on("click",function() {
        $(".sorry").addClass("close");
    })

    //visible more text
    $('.more-text .read-more').on('click', function(){
        $(this).parents('.more-text').toggleClass('open-more-text');
        $(this).parent().find('.text').slideToggle(300);
        
        if ($('.open-more-text').hasClass('open-more-text')) {
        $('.read-more').text('згорнути');
        } else {
            $('.read-more').text('читати більше');
        }
    });

    //comments love rank
    $('.select-love:not(.love-selected) .select-icon').hover(function() {
        var starsIndex = $(this).index(),
                $icons = $(this).parent().find('.select-icon'),
            starSlice = $icons.slice(0,starsIndex+1);
        $icons.removeClass('icon-love').addClass('icon-love-empty');
        $(starSlice).removeClass('icon-love-empty');
        $(starSlice).addClass('icon-love'); 
    });

    /*==============================*/
    // upload
    /*==============================*/
    $('.upload-wrapper .file-name').on('click', function() {
        $(this).closest('.upload-wrapper').find('input').click();
    });
    $('.upload-wrapper input').on('change', function () {
        var fileName = $(this).val().substring($(this).val().lastIndexOf("\\") + 1);
        if (!fileName) {
          $(this).siblings('.remove-file').click();
        } else {
            $(this).closest('.upload-wrapper').addClass('active');
            $(this).closest('.upload-wrapper').find('.file-name').text(fileName);
        }
    });
    $('.remove-file').on('click', function() {
        $(this).parent().removeClass('active');
        $(this).siblings('.file-name').text($(this).parent().data('placeholder'));
        $(this).siblings('input').val('');
    });

    /* function on page resize */
    _functions.resizeCall = function () {
        setTimeout(function () {
            _functions.pageCalculations();
        }, 100);
    };
    if (!isTouchScreen) {
        $(window).resize(function () {
            _functions.resizeCall();
        });
    } else {
        window.addEventListener("orientationchange", function () {
            _functions.resizeCall();
        }, false);
    }

    /* swiper sliders */
    _functions.getSwOptions = function (swiper) {
        let options = swiper.data('options');
        options = (!options || typeof options !== 'object') ? {} : options;
        const $p = swiper.closest('.swiper-entry');
        if (!options.pagination) options.pagination = {
            el: $p.find('.swiper-pagination')[0],
            clickable: true
        };
        if (!options.navigation) options.navigation = {
            nextEl: $p.find('.swiper-button-next')[0],
            prevEl: $p.find('.swiper-button-prev')[0]
        };
        options.preloadImages = false;
        options.lazy = {loadPrevNext: true};
        options.observer = true;
        options.observeParents = true;
        options.watchOverflow = true;
        options.centerInsufficientSlides = true;
        if (!options.speed) options.speed = 500;
        options.roundLengths = true;
        if (isTouchScreen) options.direction = "horizontal";
        return options;
    };
    _functions.initSwiper = function (el) {
        const swiper = new Swiper(el[0], _functions.getSwOptions(el));
    };

    $('.swiper-entry .swiper-container').each(function () {
        _functions.initSwiper($(this));
    });
    $('.swiper-thumbs').each(function () {
        let top = $(this).find('.swiper-container.swiper-thumbs-top')[0].swiper,
            bottom = $(this).find('.swiper-container.swiper-thumbs-bottom')[0].swiper;
        top.thumbs.swiper = bottom;
        top.thumbs.init();
        top.thumbs.update();
    });
    $('.swiper-control').each(function () {
        let top = $(this).find('.swiper-container')[0].swiper,
            bottom = $(this).find('.swiper-container')[1].swiper;
        top.controller.control = bottom;
        bottom.controller.control = top;
    });



    function setCookie(cname, cvalue, exdays) {
        var d = new Date();
        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
        var expires = "expires="+d.toUTCString();
        document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
    }

    function getCookie(cname) {
        var name = cname + "=";
        var ca = document.cookie.split(';');
        for(var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ') {
                c = c.substring(1);
            }
            if (c.indexOf(name) == 0) {
                return decodeURIComponent(c.substring(name.length, c.length));
            }
        }
        return "";
    }

    function removeCookie(cname){
        setCookie(cname, '', { expires: -1, path: '/'});
    }



    //popup
    let popupTop = 0;
    _functions.removeScroll = function () {
        popupTop = $(window).scrollTop();
        $('html').css({
            "position": "fixed",
            "top": -$(window).scrollTop(),
            "width": "100%"
        });
    }
    _functions.addScroll = function () {
        $('html').css({
            "position": "static"
        });
        window.scroll(0, popupTop);
    }

    _functions.openPopup = function (popup) {
        $('.popup-content').removeClass('active');
        $(popup + ', .popup-wrapper').addClass('active');
        _functions.removeScroll();
    };

    _functions.videoPopup = function (src) {
        $('#video-popup .embed-responsive').html('<iframe src="' + src + '"></iframe>');
        _functions.openPopup('#video-popup');
    };

     $(document).on('click', '.popup-wrapper .btn-close, .popup-wrapper .layer-close', function (e) {
        e.preventDefault();
        var that = $(this);
        _functions.closePopup(that);
    });


    _functions.closePopup = function (that) {
        $('#video-popup iframe').remove();
        if(that != undefined){
            that.closest('.popup-content').removeClass('active');
            if(!$('.popup-content').hasClass('active')){
                $('.popup-wrapper').removeClass('active');
            }
        } else{
            $('.popup-wrapper,.popup-content').removeClass('active');
        }
        
        _functions.addScroll();

        if(!$('.popup-content.delivery-popup').hasClass('active') || !$('.popup-content.disable_order').hasClass('active')){
            setTimeout(function(){
                if($('#info-popup-data').length){
                    if(!getCookie('info_popup_data')) {
                        _functions.openPopup('#info-popup-data');
                        setCookie('info_popup_data', 1);
                    }
                } else{
                    removeCookie('info_popup_data');
                }
            }, 2000);
        }        
    };

    _functions.textPopup = function (title, description) {
        $('#text-popup .text-popup-title').html(title);
        $('#text-popup .text-popup-description').html(description);
        _functions.openPopup('#text-popup');
    };

    $(document).on('click', '.video-popup', function (e) {
        e.preventDefault();
        _functions.videoPopup($(this).data('src'));
    });


    $(document).on('click', '.open-popup', function (e) {
        e.preventDefault();
        _functions.openPopup('.popup-content[data-rel="' + $(this).data('rel') + '"]');
    });

    $(document).on('click', '.popup-wrapper .close-popup, .popup-wrapper .layer-close', function (e) {
        e.preventDefault();
        var that = $(this);
        _functions.closePopup(that);
    });

    //close popup with ESCAPE key
    $(document).keyup(function (e) {
        if (e.keyCode === 27) {
            $('.popup-wrapper, .popup-content').removeClass('active');
            $(".block-menu").removeClass('active');
            $(".cart").removeClass('active');
            $('#video-popup iframe').remove();
            _functions.addScroll();
        }
    });

    // detect if user is using keyboard tab-button to navigate
    // with 'keyboard-focus' class we add default css outlines
    function keyboardFocus(e) {
        if (e.keyCode !== 9) {
            return;
        }

        switch (e.target.nodeName.toLowerCase()) {
            case 'input':
            case 'select':
            case 'textarea':
                break;
            default:
                document.documentElement.classList.add('keyboard-focus');
                document.removeEventListener('keydown', keyboardFocus, false);
        }
    }

    document.addEventListener('keydown', keyboardFocus, false);

    // filter style click
    $('.filters-list li').on('click', function (e) {
        e.preventDefault();
        $(this)
            .addClass('active')
            .siblings()
            .removeClass('active');
    });

    // categories mobile
    $('.category-title').on('click', function () {
        $(this)
            .toggleClass('active')
            .closest('.categories-menu')
            .toggleClass('active');
    });

    $('.categories-list-item').on('click', function () {
        $(this)
            .closest('.categories-menu')
            .removeClass('active')
            .find('.category-title')
            .removeClass('active');
    });

    /*---- product -----*/
    // add to favourite
    // $('.js-product .fav-btn, .product_detail-swiper .fav-btn').on('click', function () {
    //     $(this).toggleClass('active');
    // });

    //plus-minus
    // $(document).on('click', '.ing_body .decrement', function () {
    //     let $this = $(this),
    //         $input = $this.parent().find('input'),
    //         hasMin = $input[0].hasAttribute('data-min'),
    //         value = parseInt($input.val(), 10),
    //         min = hasMin ? +$input.attr('data-min') : 1;

    //     if (value != min) {
    //         value = value - 1;
    //     } else {
    //         value = min;
    //     }

    //     $input.val(value);
    // });

    // $(document).on('click', '.ing_body .increment', function () {
    //     let $this = $(this),
    //         $input = $this.parent().find('input'),
    //         value = parseInt($input.val(), 10);
    //     $input.val(value + 1);
    // });

    // order btn animation example
    $(document).on('click','.js-product .order-btn, .order-btn', function() {

        const $this = $(this);

        if (!$this.hasClass('loading')) {
            $this.addClass('loading');

            $('.js-product').not($(this).closest('.js-product')).each(function () {
                $(this).find('.order-btn').addClass('disabled');
            });

            let loader = '<span class="btn-loader"><span class="btn-loader-inner"><span></span><span></span><span></span></span></span>',
                success = '<span class="btn-loader-complete"></span>';

            $this.append(loader).find('.btn-loader').fadeIn(500, function () {
                // FOR WP DEV !!!! instead of setTimeout here MUST be succes ajax callback
                setTimeout(function () {
                    $this.append(success).fadeIn(500, function () {
                        $this.find('.btn-loader').remove();
                        setTimeout(function () {
                            $this.find('.btn-loader-complete').fadeOut(500, function () {
                                $(this).remove();
                                $this.removeClass('loading');
                                $('.js-product').each(function () {
                                    $(this).find('.order-btn').removeClass('disabled');
                                });
                            });
                        },200);
                    });
                }, 200);
            });
            setTimeout(function() {
                $('.basket').addClass('active');
            }, 7000)
        }
    });

    /*---- end of product -----*/

    //inputmask
    if ($(".inputmask").length) {
        $(".inputmask").inputmask({
            // clearMaskOnLostFocus: false
            showMaskOnHover: false
        });
    }

    // calc total sum in cart
    _functions.calculateCartTotalPrice = function () {
        let total = 0;
        $('.cart .js-product').each(function () {
            total += +$(this).data('price') * +$(this).find('.thumb-input-number input').val();
        });
        $('#card-total-price').html(total);

        if (total === 0) {
            $('#cart-submit').addClass('disabled');
        }
    }

    $(document).on('click', '.cart .js-product .thumb-input-number button', function () {
        _functions.calculateCartTotalPrice();
    });

    //remove product from card
    $(document).on('click', '.cart .js-product .btn-close', function () {
            _functions.calculateCartTotalPrice();
        /*$(this).closest('.js-product').slideUp(0, function () {
            $(this).remove();
        })*/
    });

    // open - close cart
    // $('.open-cart').on('click', function () {
    //     $('.cart').addClass('active');
    //     _functions.removeScroll();
    // });

//       // scroll to down
//   $(".scroll-to-down").on("click", function () {
//     $("html,body").animate({
//       scrollTop: $("#product").offset().top - $('header').height() - 100
//     }, 1500)
//   })
// });

const onCloseMenuEvent = () => {
    $('header').find('.hamburger').removeClass('is-active')
    $('header').removeClass('open-menu')
    $('html').removeClass('overflow-menu');
}
$(document).on('click', 'header .layer-close, .header-links li a', onCloseMenuEvent);
      //anchor scroll
  $(function () {
    $('a[href*="#"]:not([href="#"])').click(function () {
      if (location.pathname.replace(/^\//, '') == this.pathname.replace(/^\//, '') && location.hostname == this.hostname) {
        var target = $(this.hash);
        target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');
        if (target.length) {
          onCloseMenuEvent();
          console.log(target.offset() );
          $('html, body').animate({
            scrollTop: target.offset().top - $('header').height()  - $('.menu-page_nav').height() - 50
          }, 1500);

          return false;
        }
      }
    });
    
  });


   // scroll to down
   $(".scroll-to-down").on("click", function () {
    $("html,body").animate({
      scrollTop: $("#product").offset().top - $('header').height() - 100
    }, 1500)
  })



    $('.cart-close, .cart_bg-layer').on('click', function () {
        $('.cart').removeClass('active');
        _functions.addScroll();
    });
    $('.open-menu').on('click', function (e) {
        e.stopPropagation();
        if(winW < 1200){
            if ($('.block-menu').hasClass('active')) {
                $('.block-menu').removeClass('active');
            }
            else {$('.block-menu').addClass('active')}
        }
        
    });
    $("body").click(function(){
        $(".block-menu").removeClass('active');
    });
    $(".block-menu").click(function(e){
        e.stopPropagation();
     });

    $('.menu-page_nav ul li a').on('click', function () {
        $('.menu-page_nav ul li a').removeClass('active');
        $(this).toggleClass('active');
        $('.category-title').text($(this).text());
        if ($(this).hasClass('active')) {
            $('.categories-menu').removeClass('active');
            $('.category-title').removeClass('active');
        }
        
        // else {$(this).addClass('active')}
        // _functions.removeScroll();
    });
    $('.header-informer_item').on('click', function () {
        $('.header-informer_item').removeClass('active');
        $(this).toggleClass('active');
    });
    // $('.open-menu').on("click", function() {
    //     $('.menu-block').removeClass('active');
    // })

    // $('.cart-close, .cart_bg-layer').on('click', function () {
    //     $('.menu-block').removeClass('active');
    //     _functions.addScroll();
    // });

    // remove from favourites
    $('.js-product .fav-btn.btn-close').on('click', function () {
        $(this).closest('.js-product').parent().remove();
    });
    $('.js-product .fav-btn_remove_constructor.btn-close').on('click', function () {
        $(this).closest('.js-product').parent().remove();
    });

    // checkout tabs
    $('.toggle-block-control').on('change', function () {
        var value = $(this).val();
        var payment_method = $('input[name="payment_method"]:checked').val();
        if(payment_method == 'liqpay'){
            $('.no_call_me').slideDown();
        } else{
            $('input[name="no_call"]').prop( "checked", false );
            $('.no_call_me').slideUp();
        }


        let blockNum = $(this).data('block'),
            rel = $(this).data('rel'),
            $showBlock = $('.toggle-block[data-block="' + blockNum + '"][data-rel="' + rel + '"]'),
            $hideBlock = $('.toggle-block[data-block="' + blockNum + '"]:visible');

        if ($(this).is('input[type="checkbox"]')) {
            $showBlock.slideToggle(function(){
                $('select[name="self_delivery_time"]').removeAttr("disabled");
                $('select[name="self_delivery_time"]')[0].sumo.reload();
            });
            return;
        }

        if ($hideBlock.length) {
            $hideBlock.slideUp(100, function () {
                $showBlock.slideDown(100);
            });
        } else {
            $showBlock.slideDown(100);
        }

    });

    // checkout calculate

    _functions.calculateTotalCheckoutPrice = function () {
        let allSummProduct = 0;
        $('.checkout-products .js-checkout-product').each(function () {
            allSummProduct += +$(this).data('price') * +$(this).find('.thumb-input-number input').val();
        });
        console.log(allSummProduct);
        $('.all-product-price-el').text(allSummProduct);

        //show empty cart message
        if (allSummProduct === 0) {
            $('.cart-empty-section').show();
            $('.checkout-section').hide();
        }
    }

    // _functions.calculateTotalCheckoutPrice();

    // $(document).on('click', '.js-checkout-product .thumb-input-number button', function () {
    //     _functions.calculateTotalCheckoutPrice();

    //     let prod = $(this).closest('.js-checkout-product'),
    //         productSum = +prod.data('price') * +prod.find('input').val();
    //     prod.find('.price').text(productSum);
    // });

    //remove product from card
    $(document).on('click', '.js-checkout-product .btn-close', function() {
        $(this).closest('.js-checkout-product').slideUp(0, function () {
            $(this).remove();
            _functions.calculateTotalCheckoutPrice();
        });
    });

    //single product price
    _functions.calculateSinglePrice = function ($parentEl) {
        let prod = $parentEl,
            prodPrice = +prod.attr('data-price'),
            prodAmount = +prod.find('.thumb-input-number input').val(),
            productSum = 0,
            prodAdditions = prod.find('.js-additions-checkbox:checked'),
            prodAdditionsSum = 0;

        if (prodAdditions.length) {
            prodAdditions.each(function() {
                prodAdditionsSum += +$(this).attr('data-price');
            });
        }

        productSum = (prodPrice + prodAdditionsSum) * prodAmount;
        prod.find('.price').text(productSum);
    }

    $(document).on('click', '.js-product .thumb-input-number button', function() {
        _functions.calculateSinglePrice($(this).closest('.js-product'));
    });

    $(document).on('change', '.js-additions-checkbox', function() {
        _functions.calculateSinglePrice($(this).closest('.js-product'));

        var main_calories   = parseInt($('.total_caloric_single').find('b').text());
        var main_proteins   = parseInt($('.info-body').find('.main_proteins b').text());
        var main_fat        = parseInt($('.info-body').find('.main_fat b').text());
        var main_sarbohydrates = parseInt($('.info-body').find('.main_sarbohydrates b').text());

        var mod_calories    = parseInt($(this).attr('data-modifier-calories'));
        var mod_proteins    = parseInt($(this).attr('data-modifier-proteins'));
        var mod_fat         = parseInt($(this).attr('data-modifier-fat'));
        var mod_sarbohydrates = parseInt($(this).attr('data-modifier-sarbohydrates'));

        var main_count = 1;
        main_count = parseInt($('.product_detail-controls').find('.product-qty').val());

        if ($('.js-additions-checkbox').is(':checked')) {
            $('.total_caloric_single').find('b').text(main_calories+(mod_calories*main_count));
            $('.info-body').find('.main_proteins b').text(main_proteins+(mod_proteins*main_count));
            $('.info-body').find('.main_fat b').text(main_fat+(mod_fat*main_count));
            $('.info-body').find('.main_sarbohydrates b').text(main_sarbohydrates+(mod_sarbohydrates*main_count));
        } else{
            $('.total_caloric_single').find('b').text(main_calories-(mod_calories*main_count));
            $('.info-body').find('.main_proteins b').text(main_proteins-(mod_proteins*main_count));
            $('.info-body').find('.main_fat b').text(main_fat-(mod_fat*main_count));
            $('.info-body').find('.main_sarbohydrates b').text(main_sarbohydrates-(mod_sarbohydrates*main_count));
        }

    });

    // product_variations
    $(document).on('click', '.js-product .product_variations li', function (e) {
        let $this = $(this),
            $product = $this.closest('.js-product'),
            price = $this.attr('data-price'),
            oldPrice = $this.attr('data-old-price'),
            size = $this.attr('data-size'),
            imgSrc = $this.attr('data-img-scr'),
            imgHoverSrc = $this.attr('data-img-hover-src');

        $this.addClass('active').siblings().removeClass('active');

        if (price) $product.attr('data-price', price);
        if (oldPrice) $product.find('.price-old').text(oldPrice);
        if (size) $product.find('.size').text(size);
        if (imgSrc) {
            if ($product.is('.js-product-detail')) {
                $('.product_detail-img').eq(0).find('.img').attr('src', imgSrc);
            } else {
                $product.find('.img-default').attr('src', imgSrc);
            }
        }
        if (imgHoverSrc) $product.find('.img-hover').attr('src', imgHoverSrc);
        $product.find('input').val(1);

        _functions.calculateSinglePrice($product);
    });

    // Invalid Input
    $('.input[required]').on('blur', function(){
        if($(this).val().trim()){
            $(this).removeClass('invalid');
        } else {
            $(this).addClass('invalid');
        }
    });

    $('.input.required').on('blur', function(){
        if($(this).val().trim()){
            $(this).removeClass('invalid');
        } else {
            $(this).addClass('invalid');
        }
    });

    // custom_dropdown
    $(document).on('click', '.custom_dropdown-title', function (e) {
        $(this).toggleClass('active');
        $(this).closest('.custom_dropdown').find('.custom_dropdown-toggle').slideToggle(300);
    });

    // cabinet address table
    $('input[name="cabinet-address"]').on('change', function() {
        $('.cabinet_address tr').removeClass('active');
        $('input[name="cabinet-address"]:checked').closest('tr').addClass('active');
    });

    $('.cabinet_address .btn-close').on('click', function() {
       $(this).closest('tr').remove();
    });

    // ingredients
    _functions.calculateIngredientsPrice = function() {
        let totalPrice = +$('#ing_body').attr('data-product-price');

        $('#ing_output').find('.ing_control').each(function() {
            totalPrice += +$(this).attr('data-price') * +$(this).find('input').val();
        });

        totalPrice = totalPrice * +$('.ing_footer-controls input').val();

        $('#ing-total-price').text(totalPrice);
    }

    $(document).on('click', '.ing_footer-controls .thumb-input-number button', function() {
        _functions.calculateIngredientsPrice();
    });

    $(document).on('click', '#ing_body .ing_control .thumb-input-number button', function() {
        let $this = $(this),
            price = $this.attr('data-price'),
            ing = $this.attr('data-ing');

        _functions.calculateSinglePrice($this.closest('.ing_control'));
        _functions.calculateIngredientsPrice();
    });

    $(document).on('click', '#ing_body .ing_control .btn-delete', function() {
        // $("#ing_body .ingredient").trigger("click");
        let $this = $(this),
            parent = $this.closest('.ing_control'),
            ing = parent.attr('data-ing');

        parent.remove();
        $('.ing-popup .ingredient[data-ing="'+ing+'"],.ingredient[data-ing="'+ing+'"]').removeClass('active');
        _functions.calculateIngredientsPrice();
    });

    _functions.createIngControl = function($elementFromWhichCreate) { console.log('work');
        const $el = $elementFromWhichCreate,
            price       = $el.attr('data-price'),
            ing         = $el.attr('data-ing'),
            ing_group   = $el.attr('data-ing-group'),
            id          = $el.attr('data-id'),
            calories    = $el.attr('data-calories'),
            proteins    = $el.attr('data-proteins'),
            fat         = $el.attr('data-fat'),
            sarbohydrates = $el.attr('data-sarbohydrates'),
            title       = $el.find('.ingredient_title').text(),
            add_class   = $el.hasClass('obligatory');
        let new_class   = '';

        if(add_class) {
            new_class += ' only-one';
        }

        const control =  ' <div class="ing_control" data-calories="'+calories+'" data-proteins="'+proteins+'" data-fat="'+fat+'" data-sarbohydrates="'+sarbohydrates+'" data-id="'+id+'" data-ing="'+ing+'" data-group-ing="'+ing_group+'" data-price="'+price+'">\n' +
            '                                <div class="ing_control-title">'+title+'</div>\n' +
            '                                <div class="thumb-input-number'+new_class+'">\n' +
            '                                    <button type="button" class="decrement">-</button>\n' +
            '                                    <input value="1" class="product-qty" readonly="" tabindex="-1">\n' +
            '                                    <button type="button" class="increment">+</button>\n' +
            '                                </div>\n' +
            '                                <div class="ing_control-price">\n' +
            '                                    <b class="price">'+price+'</b> грн\n' +
            '                                </div>\n' +
            '                                <button class="btn-delete"></button>\n' +
            '                            </div>';

        $('#ing_output').append(control);
    }


    $(document).on('click', '#ing_body .ingredient:not(.obligatory)', function () {
        let $this = $(this),
            ing = $this.attr('data-ing');

        //$this.addClass('active').siblings().removeClass('active');
        $this.toggleClass('active');

        if ($this.hasClass('active')) {
            _functions.createIngControl($this);
        } else {
            $('.ing_control[data-ing="' + ing + '"]').remove();
        }
        _functions.calculateIngredientsPrice();
    });



    $(document).on('click', '.obligatory-ing .ingredient.obligatory', function () {
        let $this = $(this),
            ing = $this.attr('data-ing'),
            group_ing = $this.attr('data-ing-group');


        // remove data group
        $('.ing_output .ing_control').each(function(){
            var data_ing_group = $(this).attr('data-group-ing');
            if(group_ing == data_ing_group){
                $(this).remove();
            }
        });

        $(this).addClass('active').parent().siblings().children().removeClass('active');

        if ($this.hasClass('active')) {
            _functions.createIngControl($this);
        } else {
            $('.ing_control[data-ing="' + ing + '"]').remove();
        }
        _functions.calculateIngredientsPrice();
    });


    $(document).on('click', '.obligatory-ing .ingredient.obligatory', function () {
        let $this = $(this),
            ing = $this.attr('data-ing');
        $(this).addClass('active').siblings().removeClass('active');
        _functions.calculateIngredientsPrice();
    });




    // $(document).on('click', '#ing_body .ingredient:not(.obligatory)', function () {
    //     let $this = $(this),
    //         ing = $this.attr('data-ing');

    //     //$this.addClass('active').siblings().removeClass('active');
    //     $this.toggleClass('active');

    //     if ($this.hasClass('active')) {
    //         _functions.createIngControl($this);
    //     } else {
    //         $('.ing_control[data-ing="' + ing + '"]').remove();
    //     }
    //     _functions.calculateIngredientsPrice();
    // });



    // $(document).on('click', '.obligatory-ing .ingredient.obligatory', function () {
    //     let $this = $(this),
    //         ing = $this.attr('data-ing');

    //     if(!$this.hasClass('active')) {
    //         $(this).addClass('active').parent().siblings().children().removeClass('active');
    //         $('.ing_control:not([data-ing="' + ing + '"])').remove();

    //         _functions.calculateIngredientsPrice();
    //     }

    //     if ($this.hasClass('active')) {
    //         _functions.createIngControl($this);
    //     } else {
    //         $('.ing_control[data-ing="' + ing + '"]').remove();
    //     }
    // });

    // $(document).on('click', '.obligatory-ing .ingredient.obligatory', function () {
    //     let $this = $(this),
    //         ing = $this.attr('data-ing');

    //     $(this).addClass('active').siblings().removeClass('active');

    //     _functions.calculateIngredientsPrice();
    // });













    // tabs
    $('.tab-title').on('click', function() {
        $(this).parent().toggleClass('active');
    });
    $('.tab-toggle div').on('click', function() {
        var tab = $(this).closest('.tabs').find('.tab');
        var i = $(this).index();
        $(this).addClass('active').siblings().removeClass('active');
        tab.eq(i).siblings('.tab:visible').fadeOut(function() {
            tab.eq(i).fadeIn();
        });
        $(this).closest('.tab-nav').removeClass('active').find('.tab-title').text($(this).text());
    });

    // accordeon
    $('.accordeon-title').on('click', function() {
        $(this).siblings('.accordeon-title.active').toggleClass('active').next().slideToggle();
        $(this).toggleClass('active').next().slideToggle();
    });

    // delete ingrid from the cart
    // $('.cart-dropdown-delete').on('click' , function() {
    //     $('.custom_dropdown-toggle').remove();
    // })



    // show submenu on header
    $('.main-menu-show').on('click', function(event) {
        $(this).closest('li').find('.header-submenu').addClass('open');
        event.preventDefault();
    });
    $('.main-menu-show').on('mouseleave', function() {
        $(this).closest('li').find('.header-submenu').removeClass('open');
    });

    // show info on prod
    $('.info-btn').on('click', function() {
       
        $(this).closest('.info-main').find('.info-btn').addClass('active');
        $(this).closest('.info-main').find('.info-block').addClass('active');
    })
    $('.info-btn').on('mouseleave', function() {
        $(this).removeClass('active');
        $('.info-block').removeClass('active');
    })
    // $('.burger').on('mouseup', function() {
    //     $(this).removeClass('active');
    //     $('.menu-block').removeClass('active');
    // })

    //inputmask
    if ($(".inputmask").length) {
        $(".inputmask").inputmask({
          showMaskOnHover: false,
          clearMaskOnLostFocus: false
        });
    };
    if ($(".inputtime").length) {
        $(".inputtime").inputmask({
          showMaskOnHover: false,
        });
    };

    //close informer
    $(document).on('click', '.cart-informer .cart-informer-inner .button-close', function () {
        $(this).closest('.cart-informer').slideUp(0);
    });


    $(document).ready(function () {
        var urlHash = window.location.href.split("#")[1];
        if (urlHash &&  $('#' + urlHash).length )
              $('html,body').animate({
                  scrollTop: $('#' + urlHash).offset().top - 160
              }, 1500);
    });


});